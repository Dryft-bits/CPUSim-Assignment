<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE Machine [
<!ELEMENT Machine (PunctChar*, Field*, FileChannel*, Register*, RegisterArray*, ConditionBit*, RAM*, Set*, Test*, Increment*, Shift*, Logical*, Arithmetic*, Branch*, TransferRtoR*, TransferRtoA*, TransferAtoR*, Decode*, SetCondBit*, IO*, MemoryAccess*, End, Comment*, EQU*, FetchSequence, MachineInstruction*, HighlightingInfo?, LoadingInfo?, IndexingInfo?, ProgramCounterInfo?, ModuleWindowsInfo?) >
<!ATTLIST Machine name CDATA "unnamed">
<!ELEMENT PunctChar EMPTY>
<!ATTLIST PunctChar char CDATA #REQUIRED use  (symbol|token|label|comment|pseudo|illegal) #REQUIRED>
<!ELEMENT Field (FieldValue*)>
<!ATTLIST Field name CDATA #REQUIRED type  (required|optional|ignored) #REQUIRED numBits CDATA #REQUIRED relativity (absolute|pcRelativePreIncr|pcRelativePostIncr) #REQUIRED defaultValue CDATA #REQUIRED signed (true|false) #REQUIRED id ID #REQUIRED>
<!ELEMENT FieldValue EMPTY>
<!ATTLIST FieldValue name CDATA #REQUIRED value CDATA #REQUIRED>
<!ELEMENT FileChannel EMPTY>
<!ATTLIST FileChannel file CDATA #REQUIRED id CDATA #REQUIRED>
<!ELEMENT Register EMPTY>
<!ATTLIST Register name CDATA #REQUIRED width CDATA #REQUIRED initialValue CDATA #REQUIRED readOnly (true|false) "false" id ID #REQUIRED>
<!ELEMENT RegisterArray (Register+)>
<!ATTLIST RegisterArray name CDATA #REQUIRED width CDATA #REQUIRED length CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT ConditionBit EMPTY>
<!ATTLIST ConditionBit name CDATA #REQUIRED bit CDATA #REQUIRED register IDREF #REQUIRED halt (true|false) "false" id ID #REQUIRED>
<!ELEMENT RAM EMPTY>
<!ATTLIST RAM name CDATA #REQUIRED length CDATA #REQUIRED id ID #REQUIRED cellSize CDATA "8">
<!ELEMENT Increment EMPTY>
<!ATTLIST Increment name CDATA #REQUIRED register IDREF #REQUIRED overflowBit IDREF #IMPLIED carryBit IDREF #IMPLIED delta CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT Arithmetic EMPTY>
<!ATTLIST Arithmetic name CDATA #REQUIRED type (ADD|SUBTRACT|MULTIPLY|DIVIDE) #REQUIRED source1 IDREF #REQUIRED source2 IDREF #REQUIRED destination IDREF #REQUIRED overflowBit IDREF #IMPLIED  carryBit IDREF #IMPLIED  id ID #REQUIRED>
<!ELEMENT TransferRtoR EMPTY>
<!ATTLIST TransferRtoR name CDATA #REQUIRED source IDREF #REQUIRED srcStartBit CDATA #REQUIRED dest IDREF #REQUIRED destStartBit CDATA #REQUIRED numBits CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT TransferRtoA EMPTY>
<!ATTLIST TransferRtoA name CDATA #REQUIRED source IDREF #REQUIRED srcStartBit CDATA #REQUIRED dest IDREF #REQUIRED destStartBit CDATA #REQUIRED numBits CDATA #REQUIRED index IDREF #REQUIRED indexStart CDATA #IMPLIED indexNumBits CDATA #IMPLIED id ID #REQUIRED>
<!ELEMENT TransferAtoR EMPTY>
<!ATTLIST TransferAtoR name CDATA #REQUIRED source IDREF #REQUIRED srcStartBit CDATA #REQUIRED dest IDREF #REQUIRED destStartBit CDATA #REQUIRED numBits CDATA #REQUIRED index IDREF #REQUIRED indexStart CDATA #IMPLIED indexNumBits CDATA #IMPLIED id ID #REQUIRED>
<!ELEMENT Shift EMPTY>
<!ATTLIST Shift name CDATA #REQUIRED source IDREF #REQUIRED destination IDREF #REQUIRED type (logical | arithmetic | cyclic) #REQUIRED direction (right | left) #REQUIRED distance CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT Branch EMPTY>
<!ATTLIST Branch name CDATA #REQUIRED amount CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT Logical EMPTY>
<!ATTLIST Logical name CDATA #REQUIRED source1 IDREF #REQUIRED source2 IDREF #REQUIRED destination IDREF #REQUIRED type (AND | OR | NAND | NOR | XOR | NOT) #REQUIRED id ID #REQUIRED>
<!ELEMENT Set EMPTY>
<!ATTLIST Set name CDATA #REQUIRED register IDREF #REQUIRED start CDATA #REQUIRED numBits CDATA #REQUIRED value CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT Test EMPTY >
<!ATTLIST Test name CDATA #REQUIRED register IDREF #REQUIRED start CDATA #REQUIRED numBits CDATA #REQUIRED comparison (EQ | NE | LT | GT | LE | GE ) #REQUIRED value CDATA #REQUIRED omission CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT Decode EMPTY >
<!ATTLIST Decode name CDATA #REQUIRED ir IDREF #REQUIRED id ID #REQUIRED>
<!ELEMENT IO EMPTY >
<!ATTLIST IO name CDATA #REQUIRED direction (input | output) #REQUIRED type (integer | ascii | unicode) #REQUIRED buffer IDREF #REQUIRED connection CDATA #IMPLIED id ID #REQUIRED>
<!ELEMENT MemoryAccess EMPTY >
<!ATTLIST MemoryAccess name CDATA #REQUIRED direction (read | write ) #REQUIRED memory IDREF #REQUIRED data IDREF #REQUIRED address IDREF #REQUIRED id ID #REQUIRED>
<!ELEMENT SetCondBit EMPTY >
<!ATTLIST SetCondBit name CDATA #REQUIRED bit IDREF #REQUIRED value (0 | 1) #REQUIRED id ID #REQUIRED>
<!ELEMENT End EMPTY>
<!ATTLIST End id ID #REQUIRED>
<!ELEMENT Comment EMPTY>
<!ATTLIST Comment name CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT Microinstruction EMPTY>
<!ATTLIST Microinstruction microRef IDREF #REQUIRED>
<!ELEMENT MachineInstruction (Microinstruction*)>
<!ATTLIST MachineInstruction name CDATA #REQUIRED opcode CDATA #REQUIRED instructionFormat CDATA #REQUIRED assemblyFormat CDATA #REQUIRED instructionColors CDATA #REQUIRED assemblyColors CDATA #REQUIRED>
<!ELEMENT FetchSequence (Microinstruction*) >
<!ELEMENT EQU EMPTY>
<!ATTLIST EQU name CDATA #REQUIRED value CDATA #REQUIRED>
<!ELEMENT HighlightingInfo (RegisterRAMPair*)>
<!ELEMENT RegisterRAMPair EMPTY>
<!ATTLIST RegisterRAMPair register IDREF #REQUIRED ram IDREF #REQUIRED dynamic (true|false) #REQUIRED>
<!ELEMENT LoadingInfo EMPTY>
<!ATTLIST LoadingInfo ram IDREF #IMPLIED startingAddress CDATA "0">
<!ELEMENT IndexingInfo EMPTY>
<!ATTLIST IndexingInfo indexFromRight CDATA "false">
<!ELEMENT ProgramCounterInfo EMPTY>
<!ATTLIST ProgramCounterInfo programCounter IDREF #REQUIRED>
<!ELEMENT ModuleWindowsInfo ((RegisterWindowInfo | RegisterArrayWindowInfo | RAMWindowInfo)*) >
<!ELEMENT RegisterWindowInfo EMPTY>
<!ATTLIST RegisterWindowInfo top CDATA "50" left CDATA "50" width CDATA "300" height CDATA "150" base (Decimal|Binary|Hexadecimal|Ascii|UnsignedDec|Unicode)  "Decimal">
<!ELEMENT RegisterArrayWindowInfo EMPTY>
<!ATTLIST RegisterArrayWindowInfo array IDREF #REQUIRED top CDATA "50" left CDATA "50" width CDATA "300" height CDATA "150" base (Decimal|Binary|Hexadecimal|Ascii|UnsignedDec|Unicode) "Decimal">
<!ELEMENT RAMWindowInfo EMPTY>
<!ATTLIST RAMWindowInfo ram IDREF #REQUIRED cellSize CDATA "1" top CDATA "50" left CDATA "50" width CDATA "450" height CDATA "450" contentsbase (Decimal|Binary|Hexadecimal|Ascii|UnsignedDec|Unicode) "Decimal" addressbase (Decimal|Binary|Hexadecimal) "Decimal">
]>

<Machine name="partA.cpu" >
	<!--............. Punctuation Options .............-->
	<PunctChar char="!" use="symbol" />
	<PunctChar char="#" use="symbol" />
	<PunctChar char="$" use="symbol" />
	<PunctChar char="%" use="symbol" />
	<PunctChar char="&amp;" use="symbol" />
	<PunctChar char="^" use="symbol" />
	<PunctChar char="_" use="symbol" />
	<PunctChar char="`" use="symbol" />
	<PunctChar char="*" use="symbol" />
	<PunctChar char="?" use="symbol" />
	<PunctChar char="@" use="symbol" />
	<PunctChar char="~" use="symbol" />
	<PunctChar char="+" use="symbol" />
	<PunctChar char="-" use="symbol" />
	<PunctChar char="(" use="token" />
	<PunctChar char=")" use="token" />
	<PunctChar char="," use="token" />
	<PunctChar char="/" use="token" />
	<PunctChar char="=" use="token" />
	<PunctChar char="[" use="token" />
	<PunctChar char="\" use="token" />
	<PunctChar char="]" use="token" />
	<PunctChar char="{" use="token" />
	<PunctChar char="|" use="token" />
	<PunctChar char="}" use="token" />
	<PunctChar char="." use="pseudo" />
	<PunctChar char=":" use="label" />
	<PunctChar char=";" use="comment" />

	<!--......... machine instruction fields ............-->
	<Field name="add4" type="required" numBits="4" relativity="absolute" signed="false" defaultValue="0" id="model.Field2578e5f0">
	</Field>
	<Field name="imm" type="required" numBits="12" relativity="absolute" signed="true" defaultValue="0" id="model.Field48f563cb">
	</Field>
	<Field name="addr6" type="required" numBits="6" relativity="absolute" signed="false" defaultValue="0" id="model.Field27eb7552">
	</Field>
	<Field name="addr" type="required" numBits="8" relativity="absolute" signed="false" defaultValue="0" id="model.Field5dd7030">
	</Field>
	<Field name="pad" type="ignored" numBits="2" relativity="absolute" signed="false" defaultValue="0" id="model.Field67e8421e">
	</Field>
	<Field name="opcode" type="required" numBits="4" relativity="absolute" signed="false" defaultValue="0" id="model.Field4e09e13">
	</Field>

	<!--............. FileChannels .................-->
	<!-- none -->

	<!--............. registers .....................-->
	<Register name="ACC" width="16" initialValue="0" readOnly="false" id="model.module.Register785d2a38" />
	<Register name="IR" width="16" initialValue="0" readOnly="false" id="model.module.Register16ef89f3" />
	<Register name="MAR" width="8" initialValue="0" readOnly="false" id="model.module.Register3332d182" />
	<Register name="MDR" width="16" initialValue="0" readOnly="false" id="model.module.Register33a2d1f1" />
	<Register name="PC" width="8" initialValue="0" readOnly="false" id="model.module.Register223f3157" />
	<Register name="Status" width="8" initialValue="0" readOnly="false" id="model.module.Register487594f2" />

	<!--............. register arrays ...............-->
	<!-- none -->

	<!--............. condition bits ................-->
	<ConditionBit name="CARRY" bit="1" register="model.module.Register487594f2" halt="false" id="model.module.ConditionBit6deee2bf" />
	<ConditionBit name="HALT" bit="0" register="model.module.Register487594f2" halt="true" id="model.module.ConditionBit48e69baa" />

	<!--............. rams ..........................-->
	<RAM name="RAM" length="256" cellSize="16" id="model.module.RAM1308ae68" />

	<!--............. set ...........................-->
	<!-- none -->

	<!--............. test ..........................-->
	<Test name="if (ACC!=0) skip 1" register="model.module.Register785d2a38" start="0" numBits="16" comparison="NE" value="0" omission="1" id="model.microinstruction.Test2e43cfab" />
	<Test name="if (ACC&lt;0) skip 2" register="model.module.Register785d2a38" start="0" numBits="16" comparison="LT" value="0" omission="2" id="model.microinstruction.Test7fb8bc58" />
	<Test name="if (ACC==0) skip 1" register="model.module.Register785d2a38" start="0" numBits="16" comparison="EQ" value="0" omission="1" id="model.microinstruction.Test3658ec43" />
	<Test name="if (ACC&gt;0) skip 2" register="model.module.Register785d2a38" start="0" numBits="16" comparison="GT" value="0" omission="2" id="model.microinstruction.Test19d52349" />

	<!--............. increment .....................-->
	<Increment name="PC++" register="model.module.Register223f3157" delta="1" id="model.microinstruction.Increment29db894f" />

	<!--............. shift .........................-->
	<!-- none -->

	<!--............. logical .......................-->
	<!-- none -->

	<!--............. arithmetic ....................-->
	<Arithmetic name="ACC+MDR-&gt;ACC" type="ADD" source1="model.module.Register785d2a38" source2="model.module.Register33a2d1f1" destination="model.module.Register785d2a38" carryBit="model.module.ConditionBit6deee2bf" id="model.microinstruction.Arithmetic13bbaa50" />
	<Arithmetic name="ACC-MDR-&gt;ACC" type="SUBTRACT" source1="model.module.Register785d2a38" source2="model.module.Register33a2d1f1" destination="model.module.Register785d2a38" id="model.microinstruction.Arithmetic62f06690" />
	<Arithmetic name="MDR-ACC-&gt;ACC" type="SUBTRACT" source1="model.module.Register33a2d1f1" source2="model.module.Register785d2a38" destination="model.module.Register785d2a38" id="model.microinstruction.Arithmetic528fceec" />

	<!--............. branch ........................-->
	<!-- none -->

	<!--............. transferRtoR ..................-->
	<TransferRtoR name="ACC-&gt;MDR" source="model.module.Register785d2a38" srcStartBit="0" dest="model.module.Register33a2d1f1" destStartBit="0" numBits="16" id="model.microinstruction.TransferRtoR8e94ccb" />
	<TransferRtoR name="IR(0-8)-&gt;MAR" source="model.module.Register16ef89f3" srcStartBit="0" dest="model.module.Register3332d182" destStartBit="0" numBits="8" id="model.microinstruction.TransferRtoR24bd1b94" />
	<TransferRtoR name="IR(0-8)-&gt;PC" source="model.module.Register16ef89f3" srcStartBit="0" dest="model.module.Register223f3157" destStartBit="0" numBits="8" id="model.microinstruction.TransferRtoR5e8ce8ac" />
	<TransferRtoR name="IR(8-16)-&gt;MAR" source="model.module.Register16ef89f3" srcStartBit="8" dest="model.module.Register3332d182" destStartBit="0" numBits="8" id="model.microinstruction.TransferRtoR5456f0aa" />
	<TransferRtoR name="MDR-&gt;ACC" source="model.module.Register33a2d1f1" srcStartBit="0" dest="model.module.Register785d2a38" destStartBit="0" numBits="16" id="model.microinstruction.TransferRtoR169b61ff" />
	<TransferRtoR name="MDR-&gt;IR" source="model.module.Register33a2d1f1" srcStartBit="0" dest="model.module.Register16ef89f3" destStartBit="0" numBits="16" id="model.microinstruction.TransferRtoR5ab6b903" />
	<TransferRtoR name="MDR-&gt;MAR" source="model.module.Register33a2d1f1" srcStartBit="0" dest="model.module.Register3332d182" destStartBit="0" numBits="8" id="model.microinstruction.TransferRtoR63c6f371" />
	<TransferRtoR name="PC-&gt;MAR" source="model.module.Register223f3157" srcStartBit="0" dest="model.module.Register3332d182" destStartBit="0" numBits="8" id="model.microinstruction.TransferRtoRf69c03" />

	<!--............. transferRtoA ..................-->
	<!-- none -->

	<!--............. transferAtoR ..................-->
	<!-- none -->

	<!--............. decode ........................-->
	<Decode name="decode-ir" ir="model.module.Register16ef89f3" id="model.microinstruction.Decode76b77521" />

	<!--............. set condition bit .............-->
	<SetCondBit name="SET-HALT-BIT" bit="model.module.ConditionBit48e69baa" value="1" id="model.microinstruction.SetCondBit4215f970" />

	<!--............. io ............................-->
	<IO name="ACC-&gt;CONSOLE" direction="output" type="integer" buffer="model.module.Register785d2a38" connection="[Console]" id="model.microinstruction.IO6e86570d" />
	<IO name="CONSOLE-&gt;ACC" direction="input" type="integer" buffer="model.module.Register785d2a38" connection="[Console]" id="model.microinstruction.IO3b5fdd4" />

	<!--............. memory access .................-->
	<MemoryAccess name="MDR-&gt;RAM[MAR]" direction="write" memory="model.module.RAM1308ae68" data="model.module.Register33a2d1f1" address="model.module.Register3332d182" id="model.microinstruction.MemoryAccess7422113e" />
	<MemoryAccess name="RAM[MAR]-&gt;MDR" direction="read" memory="model.module.RAM1308ae68" data="model.module.Register33a2d1f1" address="model.module.Register3332d182" id="model.microinstruction.MemoryAccess7efc23f9" />

	<!--............. end ...........................-->
	<End id="model.microinstruction.End229e3d14" />

	<!--............. comment ...........................-->
	<!-- none -->

	<!--............. global equs ..................-->
	<EQU name="MEMDEST" value="255" />

	<!--............. fetch sequence ................-->
	<FetchSequence>
		<Microinstruction microRef="model.microinstruction.TransferRtoRf69c03" />
		<Microinstruction microRef="model.microinstruction.MemoryAccess7efc23f9" />
		<Microinstruction microRef="model.microinstruction.TransferRtoR5ab6b903" />
		<Microinstruction microRef="model.microinstruction.Increment29db894f" />
		<Microinstruction microRef="model.microinstruction.Decode76b77521" />
		<Microinstruction microRef="model.microinstruction.End229e3d14" />
	</FetchSequence>

	<!--............. machine instructions ..........-->

	<MachineInstruction name="addi" opcode="0" instructionFormat="opcode imm" assemblyFormat="opcode imm" instructionColors="#8389b5 #a3b4b2" assemblyColors="#8389b5 #a3b4b2" >
		<Microinstruction microRef="model.microinstruction.Arithmetic13bbaa50" />
		<Microinstruction microRef="model.microinstruction.End229e3d14" />
	</MachineInstruction>

	<MachineInstruction name="a2m" opcode="f" instructionFormat="opcode pad pad addr" assemblyFormat="opcode addr" instructionColors="#ef9d84 #d8958b #87e5b5 #b7c2f3" assemblyColors="#ef9d84 #b7c2f3" >
		<Microinstruction microRef="model.microinstruction.TransferRtoR24bd1b94" />
		<Microinstruction microRef="model.microinstruction.MemoryAccess7efc23f9" />
		<Microinstruction microRef="model.microinstruction.TransferRtoR63c6f371" />
		<Microinstruction microRef="model.microinstruction.TransferRtoR8e94ccb" />
		<Microinstruction microRef="model.microinstruction.MemoryAccess7422113e" />
		<Microinstruction microRef="model.microinstruction.End229e3d14" />
	</MachineInstruction>

	<MachineInstruction name="m2a" opcode="d" instructionFormat="opcode pad pad addr" assemblyFormat="opcode addr" instructionColors="#9798fb #f4a3b0 #f4c4eb #e2a9dd" assemblyColors="#9798fb #e2a9dd" >
		<Microinstruction microRef="model.microinstruction.TransferRtoR24bd1b94" />
		<Microinstruction microRef="model.microinstruction.MemoryAccess7efc23f9" />
		<Microinstruction microRef="model.microinstruction.TransferRtoR63c6f371" />
		<Microinstruction microRef="model.microinstruction.MemoryAccess7efc23f9" />
		<Microinstruction microRef="model.microinstruction.TransferRtoR169b61ff" />
		<Microinstruction microRef="model.microinstruction.End229e3d14" />
	</MachineInstruction>

	<MachineInstruction name="m2m" opcode="b" instructionFormat="opcode add4 addr" assemblyFormat="opcode add4 addr" instructionColors="#c8aafa #81d7ae #93b58e" assemblyColors="#c8aafa #81d7ae #93b58e" >
		<Microinstruction microRef="model.microinstruction.TransferRtoR24bd1b94" />
		<Microinstruction microRef="model.microinstruction.MemoryAccess7efc23f9" />
		<Microinstruction microRef="model.microinstruction.TransferRtoR5456f0aa" />
		<Microinstruction microRef="model.microinstruction.MemoryAccess7422113e" />
		<Microinstruction microRef="model.microinstruction.End229e3d14" />
	</MachineInstruction>

	<MachineInstruction name="sub" opcode="c" instructionFormat="opcode pad pad addr" assemblyFormat="opcode addr" instructionColors="#ecefcb #adb7fe #c6b189 #9eaf92" assemblyColors="#ecefcb #9eaf92" >
		<Microinstruction microRef="model.microinstruction.TransferRtoR24bd1b94" />
		<Microinstruction microRef="model.microinstruction.MemoryAccess7efc23f9" />
		<Microinstruction microRef="model.microinstruction.Arithmetic62f06690" />
		<Microinstruction microRef="model.microinstruction.End229e3d14" />
	</MachineInstruction>

	<MachineInstruction name="add" opcode="9" instructionFormat="opcode pad pad addr" assemblyFormat="opcode addr" instructionColors="#ecefcb #adb7fe #c6b189 #9eaf92" assemblyColors="#ecefcb #9eaf92" >
		<Microinstruction microRef="model.microinstruction.TransferRtoR24bd1b94" />
		<Microinstruction microRef="model.microinstruction.MemoryAccess7efc23f9" />
		<Microinstruction microRef="model.microinstruction.Arithmetic13bbaa50" />
		<Microinstruction microRef="model.microinstruction.End229e3d14" />
	</MachineInstruction>

	<MachineInstruction name="stop" opcode="a" instructionFormat="opcode pad pad pad pad pad pad" assemblyFormat="opcode" instructionColors="#aaedf3 #cec4fb #dac7ac #88c497 #fcaf89 #de81a0 #d4e58a" assemblyColors="#aaedf3" >
		<Microinstruction microRef="model.microinstruction.SetCondBit4215f970" />
		<Microinstruction microRef="model.microinstruction.End229e3d14" />
	</MachineInstruction>

	<MachineInstruction name="ipa" opcode="7" instructionFormat="opcode pad pad pad pad pad pad" assemblyFormat="opcode" instructionColors="#aaedf3 #cec4fb #dac7ac #88c497 #fcaf89 #de81a0 #d4e58a" assemblyColors="#aaedf3" >
		<Microinstruction microRef="model.microinstruction.IO3b5fdd4" />
		<Microinstruction microRef="model.microinstruction.End229e3d14" />
	</MachineInstruction>

	<MachineInstruction name="opa" opcode="8" instructionFormat="opcode pad pad pad pad pad pad" assemblyFormat="opcode" instructionColors="#aaedf3 #cec4fb #dac7ac #88c497 #fcaf89 #de81a0 #d4e58a" assemblyColors="#aaedf3" >
		<Microinstruction microRef="model.microinstruction.IO6e86570d" />
		<Microinstruction microRef="model.microinstruction.End229e3d14" />
	</MachineInstruction>

	<MachineInstruction name="sta" opcode="6" instructionFormat="opcode pad pad addr" assemblyFormat="opcode addr" instructionColors="#f2bef5 #a0c2a0 #b0ecb6 #a48f9d" assemblyColors="#f2bef5 #a48f9d" >
		<Microinstruction microRef="model.microinstruction.TransferRtoR24bd1b94" />
		<Microinstruction microRef="model.microinstruction.TransferRtoR8e94ccb" />
		<Microinstruction microRef="model.microinstruction.MemoryAccess7422113e" />
		<Microinstruction microRef="model.microinstruction.End229e3d14" />
	</MachineInstruction>

	<MachineInstruction name="lda" opcode="5" instructionFormat="opcode pad pad addr" assemblyFormat="opcode addr" instructionColors="#f2bef5 #a0c2a0 #b0ecb6 #a48f9d" assemblyColors="#f2bef5 #a48f9d" >
		<Microinstruction microRef="model.microinstruction.TransferRtoR24bd1b94" />
		<Microinstruction microRef="model.microinstruction.MemoryAccess7efc23f9" />
		<Microinstruction microRef="model.microinstruction.TransferRtoR169b61ff" />
		<Microinstruction microRef="model.microinstruction.End229e3d14" />
	</MachineInstruction>

	<MachineInstruction name="jmpn" opcode="4" instructionFormat="opcode pad pad addr" assemblyFormat="opcode addr" instructionColors="#bebba9 #8fda84 #b5dcce #bb8a98" assemblyColors="#bebba9 #bb8a98" >
		<Microinstruction microRef="model.microinstruction.Test19d52349" />
		<Microinstruction microRef="model.microinstruction.Test3658ec43" />
		<Microinstruction microRef="model.microinstruction.TransferRtoR5e8ce8ac" />
		<Microinstruction microRef="model.microinstruction.End229e3d14" />
	</MachineInstruction>

	<MachineInstruction name="jmpp" opcode="3" instructionFormat="opcode pad pad addr" assemblyFormat="opcode addr" instructionColors="#bebba9 #8fda84 #b5dcce #bb8a98" assemblyColors="#bebba9 #bb8a98" >
		<Microinstruction microRef="model.microinstruction.Test7fb8bc58" />
		<Microinstruction microRef="model.microinstruction.Test3658ec43" />
		<Microinstruction microRef="model.microinstruction.TransferRtoR5e8ce8ac" />
		<Microinstruction microRef="model.microinstruction.End229e3d14" />
	</MachineInstruction>

	<MachineInstruction name="jmpnz" opcode="2" instructionFormat="opcode pad pad addr" assemblyFormat="opcode addr" instructionColors="#bebba9 #8fda84 #b5dcce #bb8a98" assemblyColors="#bebba9 #bb8a98" >
		<Microinstruction microRef="model.microinstruction.Test3658ec43" />
		<Microinstruction microRef="model.microinstruction.TransferRtoR5e8ce8ac" />
		<Microinstruction microRef="model.microinstruction.End229e3d14" />
	</MachineInstruction>

	<MachineInstruction name="jmpz" opcode="1" instructionFormat="opcode pad pad addr" assemblyFormat="opcode addr" instructionColors="#f89af1 #d1dad8 #88c1b1 #9e97db #ada690 #caaf86 #a69487 #8cf7cf" assemblyColors="#f89af1 #9e97db #ada690 #8cf7cf" >
		<Microinstruction microRef="model.microinstruction.Test2e43cfab" />
		<Microinstruction microRef="model.microinstruction.TransferRtoR5e8ce8ac" />
		<Microinstruction microRef="model.microinstruction.End229e3d14" />
	</MachineInstruction>

	<MachineInstruction name="jmp" opcode="e" instructionFormat="opcode pad pad addr" assemblyFormat="opcode addr" instructionColors="#f89af1 #d1dad8 #88c1b1 #9e97db #ada690 #caaf86 #a69487 #8cf7cf" assemblyColors="#f89af1 #9e97db #ada690 #8cf7cf" >
		<Microinstruction microRef="model.microinstruction.TransferRtoR5e8ce8ac" />
		<Microinstruction microRef="model.microinstruction.End229e3d14" />
	</MachineInstruction>

	<!--............. highlighting info .............-->
	<HighlightingInfo>
	</HighlightingInfo>

	<!--............. loading info ..................-->
	<LoadingInfo ram="model.module.RAM1308ae68" startingAddress="0" />

	<!--............. indexing info ............-->
	<IndexingInfo indexFromRight="true" />

	<!--............. program counter info ..................-->

</Machine>
