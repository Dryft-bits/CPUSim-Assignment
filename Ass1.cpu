<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE Machine [
<!ELEMENT Machine (PunctChar*, Field*, FileChannel*, Register*, RegisterArray*, ConditionBit*, RAM*, Set*, Test*, Increment*, Shift*, Logical*, Arithmetic*, Branch*, TransferRtoR*, TransferRtoA*, TransferAtoR*, Decode*, SetCondBit*, IO*, MemoryAccess*, End, Comment*, EQU*, FetchSequence, MachineInstruction*, HighlightingInfo?, LoadingInfo?, IndexingInfo?, ProgramCounterInfo?, ModuleWindowsInfo?) >
<!ATTLIST Machine name CDATA "unnamed">
<!ELEMENT PunctChar EMPTY>
<!ATTLIST PunctChar char CDATA #REQUIRED use  (symbol|token|label|comment|pseudo|illegal) #REQUIRED>
<!ELEMENT Field (FieldValue*)>
<!ATTLIST Field name CDATA #REQUIRED type  (required|optional|ignored) #REQUIRED numBits CDATA #REQUIRED relativity (absolute|pcRelativePreIncr|pcRelativePostIncr) #REQUIRED defaultValue CDATA #REQUIRED signed (true|false) #REQUIRED id ID #REQUIRED>
<!ELEMENT FieldValue EMPTY>
<!ATTLIST FieldValue name CDATA #REQUIRED value CDATA #REQUIRED>
<!ELEMENT FileChannel EMPTY>
<!ATTLIST FileChannel file CDATA #REQUIRED id CDATA #REQUIRED>
<!ELEMENT Register EMPTY>
<!ATTLIST Register name CDATA #REQUIRED width CDATA #REQUIRED initialValue CDATA #REQUIRED readOnly (true|false) "false" id ID #REQUIRED>
<!ELEMENT RegisterArray (Register+)>
<!ATTLIST RegisterArray name CDATA #REQUIRED width CDATA #REQUIRED length CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT ConditionBit EMPTY>
<!ATTLIST ConditionBit name CDATA #REQUIRED bit CDATA #REQUIRED register IDREF #REQUIRED halt (true|false) "false" id ID #REQUIRED>
<!ELEMENT RAM EMPTY>
<!ATTLIST RAM name CDATA #REQUIRED length CDATA #REQUIRED id ID #REQUIRED cellSize CDATA "8">
<!ELEMENT Increment EMPTY>
<!ATTLIST Increment name CDATA #REQUIRED register IDREF #REQUIRED overflowBit IDREF #IMPLIED carryBit IDREF #IMPLIED delta CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT Arithmetic EMPTY>
<!ATTLIST Arithmetic name CDATA #REQUIRED type (ADD|SUBTRACT|MULTIPLY|DIVIDE) #REQUIRED source1 IDREF #REQUIRED source2 IDREF #REQUIRED destination IDREF #REQUIRED overflowBit IDREF #IMPLIED  carryBit IDREF #IMPLIED  id ID #REQUIRED>
<!ELEMENT TransferRtoR EMPTY>
<!ATTLIST TransferRtoR name CDATA #REQUIRED source IDREF #REQUIRED srcStartBit CDATA #REQUIRED dest IDREF #REQUIRED destStartBit CDATA #REQUIRED numBits CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT TransferRtoA EMPTY>
<!ATTLIST TransferRtoA name CDATA #REQUIRED source IDREF #REQUIRED srcStartBit CDATA #REQUIRED dest IDREF #REQUIRED destStartBit CDATA #REQUIRED numBits CDATA #REQUIRED index IDREF #REQUIRED indexStart CDATA #IMPLIED indexNumBits CDATA #IMPLIED id ID #REQUIRED>
<!ELEMENT TransferAtoR EMPTY>
<!ATTLIST TransferAtoR name CDATA #REQUIRED source IDREF #REQUIRED srcStartBit CDATA #REQUIRED dest IDREF #REQUIRED destStartBit CDATA #REQUIRED numBits CDATA #REQUIRED index IDREF #REQUIRED indexStart CDATA #IMPLIED indexNumBits CDATA #IMPLIED id ID #REQUIRED>
<!ELEMENT Shift EMPTY>
<!ATTLIST Shift name CDATA #REQUIRED source IDREF #REQUIRED destination IDREF #REQUIRED type (logical | arithmetic | cyclic) #REQUIRED direction (right | left) #REQUIRED distance CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT Branch EMPTY>
<!ATTLIST Branch name CDATA #REQUIRED amount CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT Logical EMPTY>
<!ATTLIST Logical name CDATA #REQUIRED source1 IDREF #REQUIRED source2 IDREF #REQUIRED destination IDREF #REQUIRED type (AND | OR | NAND | NOR | XOR | NOT) #REQUIRED id ID #REQUIRED>
<!ELEMENT Set EMPTY>
<!ATTLIST Set name CDATA #REQUIRED register IDREF #REQUIRED start CDATA #REQUIRED numBits CDATA #REQUIRED value CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT Test EMPTY >
<!ATTLIST Test name CDATA #REQUIRED register IDREF #REQUIRED start CDATA #REQUIRED numBits CDATA #REQUIRED comparison (EQ | NE | LT | GT | LE | GE ) #REQUIRED value CDATA #REQUIRED omission CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT Decode EMPTY >
<!ATTLIST Decode name CDATA #REQUIRED ir IDREF #REQUIRED id ID #REQUIRED>
<!ELEMENT IO EMPTY >
<!ATTLIST IO name CDATA #REQUIRED direction (input | output) #REQUIRED type (integer | ascii | unicode) #REQUIRED buffer IDREF #REQUIRED connection CDATA #IMPLIED id ID #REQUIRED>
<!ELEMENT MemoryAccess EMPTY >
<!ATTLIST MemoryAccess name CDATA #REQUIRED direction (read | write ) #REQUIRED memory IDREF #REQUIRED data IDREF #REQUIRED address IDREF #REQUIRED id ID #REQUIRED>
<!ELEMENT SetCondBit EMPTY >
<!ATTLIST SetCondBit name CDATA #REQUIRED bit IDREF #REQUIRED value (0 | 1) #REQUIRED id ID #REQUIRED>
<!ELEMENT End EMPTY>
<!ATTLIST End id ID #REQUIRED>
<!ELEMENT Comment EMPTY>
<!ATTLIST Comment name CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT Microinstruction EMPTY>
<!ATTLIST Microinstruction microRef IDREF #REQUIRED>
<!ELEMENT MachineInstruction (Microinstruction*)>
<!ATTLIST MachineInstruction name CDATA #REQUIRED opcode CDATA #REQUIRED instructionFormat CDATA #REQUIRED assemblyFormat CDATA #REQUIRED instructionColors CDATA #REQUIRED assemblyColors CDATA #REQUIRED>
<!ELEMENT FetchSequence (Microinstruction*) >
<!ELEMENT EQU EMPTY>
<!ATTLIST EQU name CDATA #REQUIRED value CDATA #REQUIRED>
<!ELEMENT HighlightingInfo (RegisterRAMPair*)>
<!ELEMENT RegisterRAMPair EMPTY>
<!ATTLIST RegisterRAMPair register IDREF #REQUIRED ram IDREF #REQUIRED dynamic (true|false) #REQUIRED>
<!ELEMENT LoadingInfo EMPTY>
<!ATTLIST LoadingInfo ram IDREF #IMPLIED startingAddress CDATA "0">
<!ELEMENT IndexingInfo EMPTY>
<!ATTLIST IndexingInfo indexFromRight CDATA "false">
<!ELEMENT ProgramCounterInfo EMPTY>
<!ATTLIST ProgramCounterInfo programCounter IDREF #REQUIRED>
<!ELEMENT ModuleWindowsInfo ((RegisterWindowInfo | RegisterArrayWindowInfo | RAMWindowInfo)*) >
<!ELEMENT RegisterWindowInfo EMPTY>
<!ATTLIST RegisterWindowInfo top CDATA "50" left CDATA "50" width CDATA "300" height CDATA "150" base (Decimal|Binary|Hexadecimal|Ascii|UnsignedDec|Unicode)  "Decimal">
<!ELEMENT RegisterArrayWindowInfo EMPTY>
<!ATTLIST RegisterArrayWindowInfo array IDREF #REQUIRED top CDATA "50" left CDATA "50" width CDATA "300" height CDATA "150" base (Decimal|Binary|Hexadecimal|Ascii|UnsignedDec|Unicode) "Decimal">
<!ELEMENT RAMWindowInfo EMPTY>
<!ATTLIST RAMWindowInfo ram IDREF #REQUIRED cellSize CDATA "1" top CDATA "50" left CDATA "50" width CDATA "450" height CDATA "450" contentsbase (Decimal|Binary|Hexadecimal|Ascii|UnsignedDec|Unicode) "Decimal" addressbase (Decimal|Binary|Hexadecimal) "Decimal">
]>

<Machine name="Ass1.cpu" >
	<!--............. Punctuation Options .............-->
	<PunctChar char="!" use="symbol" />
	<PunctChar char="#" use="symbol" />
	<PunctChar char="$" use="symbol" />
	<PunctChar char="%" use="symbol" />
	<PunctChar char="&amp;" use="symbol" />
	<PunctChar char="^" use="symbol" />
	<PunctChar char="_" use="symbol" />
	<PunctChar char="`" use="symbol" />
	<PunctChar char="*" use="symbol" />
	<PunctChar char="?" use="symbol" />
	<PunctChar char="@" use="symbol" />
	<PunctChar char="~" use="symbol" />
	<PunctChar char="+" use="symbol" />
	<PunctChar char="-" use="symbol" />
	<PunctChar char="(" use="token" />
	<PunctChar char=")" use="token" />
	<PunctChar char="," use="token" />
	<PunctChar char="/" use="token" />
	<PunctChar char="=" use="token" />
	<PunctChar char="[" use="token" />
	<PunctChar char="\" use="token" />
	<PunctChar char="]" use="token" />
	<PunctChar char="{" use="token" />
	<PunctChar char="|" use="token" />
	<PunctChar char="}" use="token" />
	<PunctChar char="." use="pseudo" />
	<PunctChar char=":" use="label" />
	<PunctChar char=";" use="comment" />

	<!--......... machine instruction fields ............-->
	<Field name="OPCD" type="required" numBits="16" relativity="absolute" signed="true" defaultValue="0" id="model.Field45b031c6">
	</Field>
	<Field name="IMD" type="required" numBits="12" relativity="absolute" signed="true" defaultValue="0" id="model.Field6637b66b">
	</Field>
	<Field name="PAD" type="ignored" numBits="4" relativity="absolute" signed="false" defaultValue="0" id="model.Field59568b69">
	</Field>
	<Field name="OPCODE" type="required" numBits="4" relativity="absolute" signed="false" defaultValue="0" id="model.Fieldd79ab1d">
	</Field>
	<Field name="ADDRESS" type="required" numBits="8" relativity="absolute" signed="false" defaultValue="0" id="model.Field4304f950">
	</Field>

	<!--............. FileChannels .................-->
	<!-- none -->

	<!--............. registers .....................-->
	<Register name="ACC" width="16" initialValue="0" readOnly="false" id="model.module.Register725d42c1" />
	<Register name="IR" width="16" initialValue="0" readOnly="false" id="model.module.Register5ecb795f" />
	<Register name="MAR" width="8" initialValue="0" readOnly="false" id="model.module.Register2544d125" />
	<Register name="MDR" width="16" initialValue="0" readOnly="false" id="model.module.Register1a63cbf" />
	<Register name="PC" width="8" initialValue="0" readOnly="false" id="model.module.Register19f53d00" />
	<Register name="Status" width="8" initialValue="0" readOnly="false" id="model.module.Register1c71bee0" />
	<Register name="ZERO" width="16" initialValue="0" readOnly="true" id="model.module.Register1fbf99b2" />

	<!--............. register arrays ...............-->
	<!-- none -->

	<!--............. condition bits ................-->
	<ConditionBit name="halt-bit" bit="0" register="model.module.Register1c71bee0" halt="true" id="model.module.ConditionBit2fcc0d3e" />

	<!--............. rams ..........................-->
	<RAM name="Ram" length="256" cellSize="16" id="model.module.RAM1f6138fa" />

	<!--............. set ...........................-->
	<!-- none -->

	<!--............. test ..........................-->
	<Test name="ez" register="model.module.Register725d42c1" start="0" numBits="16" comparison="EQ" value="0" omission="1" id="model.microinstruction.Test59799cd6" />
	<Test name="gz" register="model.module.Register725d42c1" start="0" numBits="16" comparison="GT" value="0" omission="2" id="model.microinstruction.Test63fdb0aa" />
	<Test name="lz" register="model.module.Register725d42c1" start="0" numBits="16" comparison="LT" value="0" omission="2" id="model.microinstruction.Test7c7334dd" />
	<Test name="nz" register="model.module.Register725d42c1" start="0" numBits="16" comparison="NE" value="0" omission="1" id="model.microinstruction.Test2f892849" />

	<!--............. increment .....................-->
	<Increment name="INC" register="model.module.Register19f53d00" overflowBit="model.module.ConditionBit2fcc0d3e" delta="1" id="model.microinstruction.Increment3a839e42" />

	<!--............. shift .........................-->
	<!-- none -->

	<!--............. logical .......................-->
	<!-- none -->

	<!--............. arithmetic ....................-->
	<Arithmetic name="add" type="ADD" source1="model.module.Register725d42c1" source2="model.module.Register1a63cbf" destination="model.module.Register725d42c1" id="model.microinstruction.Arithmetic34751158" />
	<Arithmetic name="addi" type="ADD" source1="model.module.Register725d42c1" source2="model.module.Register5ecb795f" destination="model.module.Register725d42c1" id="model.microinstruction.Arithmetic51c51ed7" />
	<Arithmetic name="sub" type="SUBTRACT" source1="model.module.Register725d42c1" source2="model.module.Register1a63cbf" destination="model.module.Register725d42c1" id="model.microinstruction.Arithmetic3768bfc6" />

	<!--............. branch ........................-->
	<!-- none -->

	<!--............. transferRtoR ..................-->
	<TransferRtoR name="ACC-&gt;MDR" source="model.module.Register725d42c1" srcStartBit="0" dest="model.module.Register1a63cbf" destStartBit="0" numBits="16" id="model.microinstruction.TransferRtoR7496ee93" />
	<TransferRtoR name="IR[0-7]-&gt;MAR" source="model.module.Register5ecb795f" srcStartBit="0" dest="model.module.Register2544d125" destStartBit="0" numBits="8" id="model.microinstruction.TransferRtoR672f948" />
	<TransferRtoR name="IR[0-7]-&gt;PC" source="model.module.Register5ecb795f" srcStartBit="0" dest="model.module.Register19f53d00" destStartBit="0" numBits="8" id="model.microinstruction.TransferRtoR6d910f1f" />
	<TransferRtoR name="MDR-&gt;ACC" source="model.module.Register1a63cbf" srcStartBit="0" dest="model.module.Register725d42c1" destStartBit="0" numBits="16" id="model.microinstruction.TransferRtoR371be46" />
	<TransferRtoR name="MDR-&gt;IR" source="model.module.Register1a63cbf" srcStartBit="0" dest="model.module.Register5ecb795f" destStartBit="0" numBits="16" id="model.microinstruction.TransferRtoR40503acd" />
	<TransferRtoR name="PC-&gt;MAR" source="model.module.Register19f53d00" srcStartBit="0" dest="model.module.Register2544d125" destStartBit="0" numBits="8" id="model.microinstruction.TransferRtoR51793336" />
	<TransferRtoR name="ZERO-&gt;ACC" source="model.module.Register1fbf99b2" srcStartBit="0" dest="model.module.Register725d42c1" destStartBit="0" numBits="16" id="model.microinstruction.TransferRtoR347537f1" />

	<!--............. transferRtoA ..................-->
	<!-- none -->

	<!--............. transferAtoR ..................-->
	<!-- none -->

	<!--............. decode ........................-->
	<Decode name="decode" ir="model.module.Register5ecb795f" id="model.microinstruction.Decode634793b5" />

	<!--............. set condition bit .............-->
	<SetCondBit name="SET-HALT-BIT" bit="model.module.ConditionBit2fcc0d3e" value="1" id="model.microinstruction.SetCondBit7e10fa93" />

	<!--............. io ............................-->
	<IO name="read" direction="input" type="integer" buffer="model.module.Register725d42c1" connection="[Console]" id="model.microinstruction.IO5e331e54" />
	<IO name="write" direction="output" type="integer" buffer="model.module.Register725d42c1" connection="[Console]" id="model.microinstruction.IO270eb363" />

	<!--............. memory access .................-->
	<MemoryAccess name="MDR-&gt;RAM[ACC]" direction="write" memory="model.module.RAM1f6138fa" data="model.module.Register1a63cbf" address="model.module.Register725d42c1" id="model.microinstruction.MemoryAccess33a55863" />
	<MemoryAccess name="MDR-&gt;Ram[MAR]" direction="write" memory="model.module.RAM1f6138fa" data="model.module.Register1a63cbf" address="model.module.Register2544d125" id="model.microinstruction.MemoryAccess11ad4e9c" />
	<MemoryAccess name="MDR&lt;-RAM[ACC]" direction="read" memory="model.module.RAM1f6138fa" data="model.module.Register1a63cbf" address="model.module.Register725d42c1" id="model.microinstruction.MemoryAccess7e630f9b" />
	<MemoryAccess name="Ram[MAR]-&gt;MDR" direction="read" memory="model.module.RAM1f6138fa" data="model.module.Register1a63cbf" address="model.module.Register2544d125" id="model.microinstruction.MemoryAccess27d21a5a" />

	<!--............. end ...........................-->
	<End id="model.microinstruction.End61d5714a" />

	<!--............. comment ...........................-->
	<!-- none -->

	<!--............. global equs ..................-->
	<EQU name="NEGPTR" value="-100" />
	<EQU name="MEMADD" value="101" />
	<EQU name="PTRADD" value="100" />

	<!--............. fetch sequence ................-->
	<FetchSequence>
		<Microinstruction microRef="model.microinstruction.TransferRtoR51793336" />
		<Microinstruction microRef="model.microinstruction.MemoryAccess27d21a5a" />
		<Microinstruction microRef="model.microinstruction.TransferRtoR40503acd" />
		<Microinstruction microRef="model.microinstruction.Increment3a839e42" />
		<Microinstruction microRef="model.microinstruction.Decode634793b5" />
	</FetchSequence>

	<!--............. machine instructions ..........-->

	<MachineInstruction name="addi" opcode="0" instructionFormat="OPCODE PAD PAD PAD OPCD" assemblyFormat="OPCODE OPCD" instructionColors="#d0e8ee #d7a5c0 #938acb #f4bdab #fcecf4" assemblyColors="#d0e8ee #fcecf4" >
		<Microinstruction microRef="model.microinstruction.Increment3a839e42" />
		<Microinstruction microRef="model.microinstruction.TransferRtoR51793336" />
		<Microinstruction microRef="model.microinstruction.Arithmetic51c51ed7" />
		<Microinstruction microRef="model.microinstruction.End61d5714a" />
	</MachineInstruction>

	<MachineInstruction name="ldz" opcode="e" instructionFormat="OPCODE PAD PAD PAD" assemblyFormat="OPCODE" instructionColors="#c8dcbd #b89c9f #8dcbe5 #c8b7e9" assemblyColors="#c8dcbd" >
		<Microinstruction microRef="model.microinstruction.TransferRtoR347537f1" />
		<Microinstruction microRef="model.microinstruction.End61d5714a" />
	</MachineInstruction>

	<MachineInstruction name="load" opcode="d" instructionFormat="OPCODE PAD ADDRESS" assemblyFormat="OPCODE ADDRESS" instructionColors="#98eca1 #a6d8ef #e5f6c9" assemblyColors="#98eca1 #e5f6c9" >
		<Microinstruction microRef="model.microinstruction.TransferRtoR672f948" />
		<Microinstruction microRef="model.microinstruction.MemoryAccess27d21a5a" />
		<Microinstruction microRef="model.microinstruction.TransferRtoR40503acd" />
		<Microinstruction microRef="model.microinstruction.TransferRtoR672f948" />
		<Microinstruction microRef="model.microinstruction.MemoryAccess27d21a5a" />
		<Microinstruction microRef="model.microinstruction.TransferRtoR371be46" />
		<Microinstruction microRef="model.microinstruction.End61d5714a" />
	</MachineInstruction>

	<MachineInstruction name="store" opcode="c" instructionFormat="OPCODE PAD ADDRESS" assemblyFormat="OPCODE ADDRESS" instructionColors="#87b7ec #cea4e6 #8da1ed" assemblyColors="#87b7ec #8da1ed" >
		<Microinstruction microRef="model.microinstruction.TransferRtoR672f948" />
		<Microinstruction microRef="model.microinstruction.MemoryAccess27d21a5a" />
		<Microinstruction microRef="model.microinstruction.TransferRtoR40503acd" />
		<Microinstruction microRef="model.microinstruction.TransferRtoR672f948" />
		<Microinstruction microRef="model.microinstruction.TransferRtoR7496ee93" />
		<Microinstruction microRef="model.microinstruction.MemoryAccess11ad4e9c" />
		<Microinstruction microRef="model.microinstruction.End61d5714a" />
	</MachineInstruction>

	<MachineInstruction name="sub" opcode="b" instructionFormat="OPCODE PAD ADDRESS" assemblyFormat="OPCODE ADDRESS" instructionColors="#ceb8b8 #a98ecd #efd6cf" assemblyColors="#ceb8b8 #efd6cf" >
		<Microinstruction microRef="model.microinstruction.TransferRtoR672f948" />
		<Microinstruction microRef="model.microinstruction.MemoryAccess27d21a5a" />
		<Microinstruction microRef="model.microinstruction.Arithmetic3768bfc6" />
		<Microinstruction microRef="model.microinstruction.End61d5714a" />
	</MachineInstruction>

	<MachineInstruction name="add" opcode="a" instructionFormat="OPCODE PAD ADDRESS" assemblyFormat="OPCODE ADDRESS" instructionColors="#c1dfad #95cb89 #d38b97" assemblyColors="#c1dfad #d38b97" >
		<Microinstruction microRef="model.microinstruction.TransferRtoR672f948" />
		<Microinstruction microRef="model.microinstruction.MemoryAccess27d21a5a" />
		<Microinstruction microRef="model.microinstruction.Arithmetic34751158" />
		<Microinstruction microRef="model.microinstruction.End61d5714a" />
	</MachineInstruction>

	<MachineInstruction name="stop" opcode="9" instructionFormat="OPCODE PAD PAD PAD" assemblyFormat="OPCODE" instructionColors="#dcea85 #80edc2 #f3daa4 #82af9c" assemblyColors="#dcea85" >
		<Microinstruction microRef="model.microinstruction.SetCondBit7e10fa93" />
		<Microinstruction microRef="model.microinstruction.End61d5714a" />
	</MachineInstruction>

	<MachineInstruction name="opa" opcode="8" instructionFormat="OPCODE PAD PAD PAD" assemblyFormat="OPCODE" instructionColors="#dd928b #dad0ce #e5ecb0 #a2e2f1" assemblyColors="#dd928b" >
		<Microinstruction microRef="model.microinstruction.IO270eb363" />
		<Microinstruction microRef="model.microinstruction.End61d5714a" />
	</MachineInstruction>

	<MachineInstruction name="ipa" opcode="7" instructionFormat="OPCODE PAD PAD PAD" assemblyFormat="OPCODE" instructionColors="#f085bd #8c94d1 #cbd7ea #c3e3dc" assemblyColors="#f085bd" >
		<Microinstruction microRef="model.microinstruction.IO5e331e54" />
		<Microinstruction microRef="model.microinstruction.End61d5714a" />
	</MachineInstruction>

	<MachineInstruction name="sta" opcode="6" instructionFormat="OPCODE PAD ADDRESS" assemblyFormat="OPCODE ADDRESS" instructionColors="#959a84 #f1bdf9 #bdfea6 #eae3fb #e2bfe5 #f6dabf" assemblyColors="#959a84 #bdfea6 #eae3fb #e2bfe5 #f6dabf" >
		<Microinstruction microRef="model.microinstruction.TransferRtoR672f948" />
		<Microinstruction microRef="model.microinstruction.TransferRtoR7496ee93" />
		<Microinstruction microRef="model.microinstruction.MemoryAccess11ad4e9c" />
		<Microinstruction microRef="model.microinstruction.End61d5714a" />
	</MachineInstruction>

	<MachineInstruction name="lda" opcode="5" instructionFormat="OPCODE PAD ADDRESS" assemblyFormat="OPCODE ADDRESS" instructionColors="#959a84 #c7b4db #bdfea6 #eae3fb #e2bfe5 #f6dabf" assemblyColors="#959a84 #bdfea6 #eae3fb #e2bfe5 #f6dabf" >
		<Microinstruction microRef="model.microinstruction.TransferRtoR672f948" />
		<Microinstruction microRef="model.microinstruction.MemoryAccess27d21a5a" />
		<Microinstruction microRef="model.microinstruction.TransferRtoR371be46" />
		<Microinstruction microRef="model.microinstruction.End61d5714a" />
	</MachineInstruction>

	<MachineInstruction name="jmpn" opcode="4" instructionFormat="OPCODE PAD ADDRESS" assemblyFormat="OPCODE ADDRESS" instructionColors="#959a84 #d688de #bdfea6 #eae3fb #e2bfe5 #f6dabf" assemblyColors="#959a84 #bdfea6 #eae3fb #e2bfe5 #f6dabf" >
		<Microinstruction microRef="model.microinstruction.Test63fdb0aa" />
		<Microinstruction microRef="model.microinstruction.Test59799cd6" />
		<Microinstruction microRef="model.microinstruction.TransferRtoR6d910f1f" />
		<Microinstruction microRef="model.microinstruction.End61d5714a" />
	</MachineInstruction>

	<MachineInstruction name="jmpp" opcode="3" instructionFormat="OPCODE PAD ADDRESS" assemblyFormat="OPCODE ADDRESS" instructionColors="#959a84 #8a93c2 #bdfea6 #eae3fb #e2bfe5 #f6dabf" assemblyColors="#959a84 #bdfea6 #eae3fb #e2bfe5 #f6dabf" >
		<Microinstruction microRef="model.microinstruction.Test7c7334dd" />
		<Microinstruction microRef="model.microinstruction.Test59799cd6" />
		<Microinstruction microRef="model.microinstruction.TransferRtoR6d910f1f" />
		<Microinstruction microRef="model.microinstruction.End61d5714a" />
	</MachineInstruction>

	<MachineInstruction name="jmpnz" opcode="2" instructionFormat="OPCODE PAD ADDRESS" assemblyFormat="OPCODE ADDRESS" instructionColors="#959a84 #93eacc #bdfea6 #eae3fb #e2bfe5 #f6dabf" assemblyColors="#959a84 #bdfea6 #eae3fb #e2bfe5 #f6dabf" >
		<Microinstruction microRef="model.microinstruction.Test59799cd6" />
		<Microinstruction microRef="model.microinstruction.TransferRtoR6d910f1f" />
		<Microinstruction microRef="model.microinstruction.End61d5714a" />
	</MachineInstruction>

	<MachineInstruction name="jmpz" opcode="1" instructionFormat="OPCODE PAD ADDRESS" assemblyFormat="OPCODE ADDRESS" instructionColors="#959a84 #b4dba4 #bdfea6 #eae3fb #e2bfe5 #f6dabf" assemblyColors="#959a84 #bdfea6 #eae3fb #e2bfe5 #f6dabf" >
		<Microinstruction microRef="model.microinstruction.Test2f892849" />
		<Microinstruction microRef="model.microinstruction.TransferRtoR6d910f1f" />
		<Microinstruction microRef="model.microinstruction.End61d5714a" />
	</MachineInstruction>

	<MachineInstruction name="jmp" opcode="f" instructionFormat="OPCODE PAD ADDRESS" assemblyFormat="OPCODE ADDRESS" instructionColors="#f1ce95 #a3ddce #a094e5 #bdfea6 #eae3fb #e2bfe5 #f6dabf" assemblyColors="#f1ce95 #a094e5 #bdfea6 #eae3fb #e2bfe5 #f6dabf" >
		<Microinstruction microRef="model.microinstruction.TransferRtoR6d910f1f" />
		<Microinstruction microRef="model.microinstruction.End61d5714a" />
	</MachineInstruction>

	<!--............. highlighting info .............-->
	<HighlightingInfo>
	</HighlightingInfo>

	<!--............. loading info ..................-->
	<LoadingInfo ram="model.module.RAM1f6138fa" startingAddress="0" />

	<!--............. indexing info ............-->
	<IndexingInfo indexFromRight="true" />

	<!--............. program counter info ..................-->

</Machine>
